CREATE TABLE setting (
	id INTEGER IDENTITY,
	name VARCHAR(512),
);

CREATE TABLE node (
	id INTEGER IDENTITY,
	parent_id INTEGER,
	path VARCHAR(2048) NOT NULL,
	FOREIGN KEY (parent_id) REFERENCES node (id) ON DELETE CASCADE,
);

CREATE TABLE value (
	id INTEGER IDENTITY,
	node_id INTEGER NOT NULL,
	setting_id INTEGER NOT NULL,
	value_type VARCHAR(16) NOT NULL,
	string_value VARCHAR(4096),
	boolean_value BOOLEAN,
	numeric_value INTEGER,
	decimal_value DECIMAL,
	date_value TIMESTAMP WITH TIME ZONE,
	FOREIGN KEY (node_id) REFERENCES node (id) ON DELETE CASCADE,
	FOREIGN KEY (setting_id) REFERENCES setting (id) ON DELETE CASCADE,
);

CREATE TABLE user (
	id INTEGER IDENTITY,
	name VARCHAR(128) NOT NULL,
);

CREATE TABLE feed (
	id INTEGER IDENTITY,
	name VARCHAR(255) NOT NULL,
	url VARCHAR(2048) NOT NULL,
	update_frequency INTEGER NOT NULL,
	active BOOLEAN NOT NULL,
);

CREATE TABLE post (
	id INTEGER IDENTITY,
	title VARCHAR(512) NOT NULL,
	published TIMESTAMP WITH TIME ZONE NOT NULL,
	fetched TIMESTAMP WITH TIME ZONE NOT NULL,
	text VARCHAR(1000000) NOT NULL,
	link VARCHAR(2048) NOT NULL,
	guid VARCHAR(40) NOT NULL,
	feed_id INTEGER NOT NULL,
	FOREIGN KEY (feed_id) REFERENCES feed (id),
	CONSTRAINT uc_post_guid UNIQUE (guid),
);

CREATE INDEX post_guid_idx ON post (guid);

CREATE TABLE post_state (
	id INTEGER IDENTITY,
	read BOOLEAN NOT NULL,
	stared BOOLEAN NOT NULL,
	post_id INTEGER NOT NULL,
	user_id INTEGER NOT NULL,
	FOREIGN KEY (post_id) REFERENCES post (id) ON DELETE CASCADE,
	FOREIGN KEY (user_id) REFERENCES user (id) ON DELETE CASCADE,
);

CREATE TABLE feed_update (
	id INTEGER IDENTITY,
	total_count INTEGER NOT NULL,
	new_count INTEGER NOT NULL,
	updated TIMESTAMP WITH TIME ZONE NOT NULL,
	feed_id INTEGER NOT NULL,
	FOREIGN KEY (feed_id) REFERENCES feed (id),
);
